{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] < new Date()) {\n      iziToast.error({ title: \"Error\", message: \"Please choose a date in the future\" });\n      document.querySelector('[data-start]').disabled = true;\n    } else {\n      document.querySelector('[data-start]').disabled = false;\n      userSelectedDate = selectedDates[0];\n    }\n  }\n};\n\nconst datetimePicker = flatpickr(\"#datetime-picker\", options);\n\nlet userSelectedDate = null;\n\ndocument.querySelector('[data-start]').addEventListener('click', () => {\n  if (!userSelectedDate) return;\n\n  const interval = setInterval(() => {\n    const now = new Date();\n    const timeDiff = userSelectedDate - now;\n\n    if (timeDiff <= 0) {\n      clearInterval(interval);\n      iziToast.info({ title: \"Time's up!\", message: \"The countdown has ended.\" });\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(timeDiff);\n\n    document.querySelector('[data-days]').textContent = addLeadingZero(days);\n    document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n    document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n    document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\n  }, 1000);\n\n  document.querySelector('[data-start]').disabled = true;\n  document.querySelector('#datetime-picker').disabled = true;\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["options","selectedDates","iziToast","userSelectedDate","flatpickr","interval","timeDiff","days","hours","minutes","seconds","convertMs","addLeadingZero","ms","value"],"mappings":"2GAKA,MAAMA,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,EAAI,IAAI,MACzBC,EAAS,MAAM,CAAE,MAAO,QAAS,QAAS,oCAAoC,CAAE,EAChF,SAAS,cAAc,cAAc,EAAE,SAAW,KAElD,SAAS,cAAc,cAAc,EAAE,SAAW,GAClDC,EAAmBF,EAAc,CAAC,EAErC,CACH,EAEuBG,EAAU,mBAAoBJ,CAAO,EAE5D,IAAIG,EAAmB,KAEvB,SAAS,cAAc,cAAc,EAAE,iBAAiB,QAAS,IAAM,CACrE,GAAI,CAACA,EAAkB,OAEvB,MAAME,EAAW,YAAY,IAAM,CAEjC,MAAMC,EAAWH,EADL,IAAI,KAGhB,GAAIG,GAAY,EAAG,CACjB,cAAcD,CAAQ,EACtBH,EAAS,KAAK,CAAE,MAAO,aAAc,QAAS,0BAA0B,CAAE,EAC1E,MACD,CAED,KAAM,CAAE,KAAAK,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAQ,EAE5D,SAAS,cAAc,aAAa,EAAE,YAAcM,EAAeL,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcK,EAAeJ,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcI,EAAeH,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcG,EAAeF,CAAO,CAC9E,EAAE,GAAI,EAEP,SAAS,cAAc,cAAc,EAAE,SAAW,GAClD,SAAS,cAAc,kBAAkB,EAAE,SAAW,EACxD,CAAC,EAED,SAASC,EAAUE,EAAI,CAMrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EACjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeE,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}